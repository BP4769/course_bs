n <- 100
x <- runif(100, 0, 30)
y <- 5 + 1.5 * x
setwd("D:/OneDrive - Univerza v Ljubljani/TODO/BayesianStats/2_Probabilistic_programming")
plot(x, y)
n <- 100
x <- runif(100, 0, 30)
y <- 5 + rnorm(1, 1.5, 2) * x
plot(x, y)
n <- 100
x <- runif(100, 0, 30)
y <- 5 + rnorm(1, 1.5, 10) * x
plot(x, y)
n <- 100
x <- runif(100, 0, 30)
y <- 5 + rnorm(100, 1.5, 10) * x
plot(x, y)
n <- 100
x <- runif(100, 0, 30)
y <- 5 + rnorm(100, 1.5, 0.5) * x
plot(x, y)
n <- 100
x <- runif(100, 0, 30)
y <- 5 + rnorm(100, 1.5, 0.2) * x
plot(x, y)
n <- 100
x <- runif(100, 0, 30)
y <- 5 + (1.5 + rnorm(100, 0, 0.5)) * x
plot(x, y)
n <- 100
x <- runif(100, 0, 30)
a <- 5 + rnorm(100, 0, 2)
b <- 1.5 + rnorm(100, 0, 0.2)
y <- a + b * x
plot(x, y)
x <- runif(100, 0, 30)
a <- 5 + rnorm(100, 0, 2)
b <- 1.5 + rnorm(100, 0, 0.2)
y <- a + b * x
plot(x, y)
x <- runif(100, 0, 30)
a <- 5 + rnorm(100, 0, 2)
b <- 1.5 + rnorm(100, 0, 0.2)
y <- a + b * x
plot(x, y)
x <- runif(100, 0, 30)
a <- 5 + rnorm(100, 0, 2)
b <- 1.5 + rnorm(100, 0, 0.2)
y <- a + b * x
plot(x, y)
x <- runif(100, 0, 30)
a <- 5 + rnorm(100, 0, 2)
b <- 1.5 + rnorm(100, 0, 0.2)
y <- a + b * x
plot(x, y)
n <- 100
x <- runif(100, 0, 30)
a <- 5 + rnorm(100, 0, 2)
b <- 1.5 + rnorm(100, 0, 0.2)
y <- a + b * x
plot(x, y)
df <- data.frame(x=x, y=y)
write.table(df, file="toy.csv")
write.table(df, file="toy.csv", row.names = FALSE)
write.table(df, file="toy.csv", row.names = FALSE, sep=";")
write.table(df, file="toy.csv", row.names = FALSE, sep=",")
library(cmdstanr) # for interfacing Stan
library(ggplot2) # for visualizations
library(tidyverse) # for data prep
library(posterior) # for extracting samples
library(bayesplot) # for some quick MCMC visualizations
library(mcmcse) # for comparing samples and calculating MCSE
# compile the model
model <- cmdstan_model("./models/linear.stan")
# prepare the data
data <- read.csv("./data/toy.csv")
# prepare input for Stan
stan_data <- list(n = nrow(data), x = data$x, y = data$y)
# fit
fit <- model$sample(
data = stan_data,
chains = 4,
parallel_chains = 4,
refresh = 500
)
# traceplot
mcmc_trace(fit)
# traceplot
mcmc_trace(fit$draws())
# summary
fit$summary()
# lines and confidence in lines
df <- as_draws_df(fit$draws())
View(df)
ggplot() +
geom_point(data=data, aes(x=x, y=y), alpha=0.4, shape=16) +
geom_abline(data=df, aes(slope=b, intercept=a), alpha=0.02, size=1)
ggplot() +
geom_point(data=data, aes(x=x, y=y), alpha=0.4, shape=16) +
geom_abline(data=df, aes(slope=b, intercept=a), alpha=0.001, size=1)
ggplot() +
geom_point(data=data, aes(x=x, y=y), alpha=0.4, shape=16) +
geom_abline(data=df, aes(slope=b, intercept=a), alpha=0.005, size=1)
# fit
fit <- model$sample(
data = stan_data,
chains = 4,
parallel_chains = 4,
refresh = 500,
iter = 100
)
?fit
?cmdstanr:fit
?cmdstanr::fit
# fit
fit <- model$sample(
data = stan_data,
chains = 4,
parallel_chains = 4,
refresh = 500,
num_samples = 100
)
# traceplot
mcmc_trace(fit$draws())
# summary
fit$summary()
# lines and confidence in lines
df <- as_draws_df(fit$draws())
ggplot() +
geom_point(data=data, aes(x=x, y=y), alpha=0.4, shape=16) +
geom_abline(data=df, aes(slope=b, intercept=a), alpha=0.01, size=1)
# prepare the data
data <- read.csv("./data/toy.csv")
# prepare input for Stan
stan_data <- list(n = nrow(data), x = data$x, y = data$y)
# fit
fit <- model$sample(
data = stan_data,
chains = 4,
parallel_chains = 4,
refresh = 500,
num_samples = 100
)
# traceplot
mcmc_trace(fit$draws())
# fit
fit <- model$sample(
data = stan_data,
chains = 4,
parallel_chains = 4,
refresh = 500,
iter_sampling = 100
)
# traceplot
mcmc_trace(fit$draws())
# summary
fit$summary()
# lines and confidence in lines
df <- as_draws_df(fit$draws())
ggplot() +
geom_point(data=data, aes(x=x, y=y), alpha=0.4, shape=16) +
geom_abline(data=df, aes(slope=b, intercept=a), alpha=0.01, size=1)
ggplot() +
geom_point(data=data, aes(x=x, y=y), alpha=0.6, shape=16) +
geom_abline(data=df, aes(slope=b, intercept=a), alpha=0.01, size=1)
ggplot() +
geom_point(data=data, aes(x=x, y=y), alpha=0.6, shape=16) +
geom_abline(data=df, aes(slope=b, intercept=a), alpha=0.05, size=1)
ggplot() +
geom_point(data=data, aes(x=x, y=y), alpha=0.6, shape=16) +
geom_abline(data=df, aes(slope=b, intercept=a), alpha=0.02, size=1)
ggplot() +
geom_point(data=data, aes(x=x, y=y), alpha=0.75, shape=16) +
geom_abline(data=df, aes(slope=b, intercept=a), alpha=0.02, size=1)
# fit
fit <- model$sample(
data = stan_data
)
# prepare the data
data <- read.csv("./data/toy.csv")
# prepare input for Stan
stan_data <- list(n = nrow(data), x = data$x, y = data$y)
# fit
fit <- model$sample(
data = stan_data
)
# traceplot
mcmc_trace(fit$draws())
# summary
fit$summary()
# lines and confidence in lines
df <- as_draws_df(fit$draws())
ggplot() +
geom_point(data=data, aes(x=x, y=y), alpha=0.75, shape=16) +
geom_abline(data=df, aes(slope=b, intercept=a), alpha=0.02, size=1)
# lines and confidence in lines
df <- as_draws_df(fit$draws())
# plot 100 random lines
df_100 <- sample_n(df, 100)
# visualize
ggplot() +
geom_point(data=data, aes(x=x, y=y), alpha=0.75, shape=16) +
geom_abline(data=df_100, aes(slope=b, intercept=a), alpha=0.02, size=1)
# visualize
ggplot() +
geom_point(data=data, aes(x=x, y=y), alpha=0.75, shape=16) +
geom_abline(data=df_100, aes(slope=b, intercept=a), alpha=0.05, size=1)
